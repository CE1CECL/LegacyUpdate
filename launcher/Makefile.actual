FILES   = \
	$(wildcard *.c) \
	../shared/GetPidForName.c \
	../shared/HResult.c \
	../shared/Registry.c \
	../shared/WUErrors.c \
	../shared/VersionInfo.c
RCFILES = resource.rc

ARCH   ?= i686

ifeq ($(ARCH),64)
TAG     = x86_64
else
TAG     = i686
endif

PREFIX  = $(TAG)-w64-mingw32-

BIN     = obj/LegacyUpdate$(ARCH).exe
DEF     = $(patsubst %.dll,%.def,$(BIN))
STATIC  = $(patsubst %.dll,%.a,$(BIN))
OBJ     = $(foreach file,$(FILES),obj/$(notdir $(basename $(file)).$(TAG).o))
RES     = $(foreach file,$(RCFILES),obj/$(notdir $(basename $(file)).$(TAG).res))

CC = $(PREFIX)g++
RC = $(PREFIX)windres

override DEBUG := $(or $(DEBUG),1)

CFLAGS = \
	-std=c++11 \
	-mwindows \
	-municode \
	-DUNICODE \
	-D_UNICODE \
	$(if $(filter 1,$(DEBUG)),-D_DEBUG -g,-DNDEBUG -Os) \
	-D__USE_MINGW_ANSI_STDIO=0 \
	-D_USRDLL \
	-s \
	-fPIE \
	-ffunction-sections \
	-fdata-sections \
	-fno-unwind-tables \
	-fno-asynchronous-unwind-tables \
	-fno-exceptions \
	-fno-rtti \
	-flto \
	-Wno-write-strings \
	-I../include \
	-I../shared \
	-include stdafx.h

LDFLAGS = \
	-nodefaultlibs \
	-nostartfiles \
	-nostdlib \
	-Wl,--gc-sections \
	-Wl,--no-seh \
	-Wl,--nxcompat \
	-Wl,--enable-auto-image-base \
	-Wl,--enable-stdcall-fixup \
	-Wl,--output-def,$(DEF) \
	-Wl,--out-implib,$(STATIC) \
	-Wl,--strip-all \
	-lmsvcrt \
	-lgcc \
	-lpsapi \
	-lkernel32 \
	-luser32 \
	-lole32 \
	-loleaut32 \
	-ladvapi32 \
	-lcomctl32 \
	-lshell32 \
	-lversion

RCFLAGS = \
	-O coff

ifeq ($(ARCH),64)
	LDFLAGS += -Wl,-eWinMain
	RCFLAGS += -F pe-x86-64
else
	CFLAGS  += -march=i486
	LDFLAGS += -Wl,-e_WinMain
	RCFLAGS += -F pe-i386
endif

all: before-all $(BIN)
ifeq ($(SIGN),1)
	../build/sign.sh $(BIN)
endif

before-all:
	mkdir -p obj

$(BIN): $(OBJ) $(RES)
	$(CC) $^ $(CFLAGS) $(LDFLAGS) -o $@

obj/%.$(TAG).o: %.c
	$(CC) $< $(CFLAGS) -c -o $@

obj/%.$(TAG).o: %.cpp
	$(CC) $< $(CFLAGS) -c -o $@

obj/%.$(TAG).o: ../shared/%.c
	$(CC) $< $(CFLAGS) -c -o $@

obj/%.$(TAG).o: ../shared/%.cpp
	$(CC) $< $(CFLAGS) -c -o $@

obj/%.$(TAG).o: ../include/nsis/%.c
	$(CC) $< $(CFLAGS) -c -o $@

obj/%.$(TAG).res: %.rc
	$(RC) $< $(RCFLAGS) -o $@

clean:
	rm -rf obj

test:
	$(MAKE) DEBUG=$(DEBUG)
	./obj/LegacyUpdate.exe

.PHONY: all before-all clean test
