name: Build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-2022
    defaults:
      run:
        shell: wsl-bash {0}
    env:
      WSLENV: GITHUB_OUTPUT

    steps:
    - name: Install WSL
      uses: Vampire/setup-wsl@v3
      with:
        distribution: Ubuntu-24.04

    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up WSL
      run: |
        sudo apt-get update -q
        sudo apt-get install -qy cabextract curl make mingw-w64-x86-64-dev nsis nsis-pluginapi p7zip-full upx-ucl
        ./build/fix-nsis.sh

    - name: Set up Visual Studio
      run: |
        PATH='/mnt/c/Program Files (x86)/Microsoft Visual Studio/Installer':$PATH
        vs="$(vswhere.exe -latest -property installationPath | tr -d '\r')"
        vs_installer.exe modify \
          --quiet --norestart --noUpdateInstaller \
          --installPath "$vs" \
          --config .vsconfig

    - name: Install MinGW toolchain
      run: |
        curl -fsSL https://linuxfromscratch.org/~renodr/gcc-13.2-binutils-2.41-mingw-v11.0.1-i686-v2.tar.xz -o /tmp/mingw.tar.xz
        sudo tar -xf /tmp/mingw.tar.xz -C /opt

    - name: Extract updroots.exe
      run: |
        curl -fsSL http://download.windowsupdate.com/d/msdownload/update/software/secu/2015/03/rvkroots_3f2ce4676450c06f109b5b4e68bec252873ccc21.exe -o /tmp/rvkroots.exe
        cabextract -d setup -F updroots.exe /tmp/rvkroots.exe
        rm /tmp/rvkroots.exe

    - name: Build
      id: build
      run: |
        export PATH=/opt/gcc-13.2-binutils-2.41-mingw-v11.0.1-i686/bin:$PATH
        make CI=1 DEBUG=0
        echo "out=$(echo setup/LegacyUpdate-*.exe)" >> "$(wslpath -u "$GITHUB_OUTPUT")"

    - name: Upload Build Artifact
      uses: actions/upload-artifact@v3
      with:
        path: '${{ steps.build.outputs.out }}'
